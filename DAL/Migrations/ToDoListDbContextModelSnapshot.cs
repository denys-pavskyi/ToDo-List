// <auto-generated />
using DAL.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DAL.Migrations
{
    [DbContext(typeof(ToDoListDbContext))]
    partial class ToDoListDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.25")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("DAL.Entities.Task", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("TaskCategoryId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TaskCategoryId");

                    b.ToTable("Tasks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Complete project proposal",
                            Status = 1,
                            TaskCategoryId = 1
                        },
                        new
                        {
                            Id = 2,
                            Name = "Schedule meetings for the team",
                            Status = 0,
                            TaskCategoryId = 1
                        },
                        new
                        {
                            Id = 3,
                            Name = "Prepare presentation for the client meeting",
                            Status = 0,
                            TaskCategoryId = 1
                        },
                        new
                        {
                            Id = 4,
                            Name = "Budget planning for the month",
                            Status = 0,
                            TaskCategoryId = 2
                        },
                        new
                        {
                            Id = 5,
                            Name = "Pay bills",
                            Status = 1,
                            TaskCategoryId = 2
                        },
                        new
                        {
                            Id = 6,
                            Name = "Review and update investments",
                            Status = 0,
                            TaskCategoryId = 2
                        },
                        new
                        {
                            Id = 7,
                            Name = "Study for upcoming exam",
                            Status = 0,
                            TaskCategoryId = 3
                        },
                        new
                        {
                            Id = 8,
                            Name = "Complete an online course",
                            Status = 1,
                            TaskCategoryId = 3
                        },
                        new
                        {
                            Id = 9,
                            Name = "Research for a project",
                            Status = 0,
                            TaskCategoryId = 3
                        },
                        new
                        {
                            Id = 10,
                            Name = "Clean and organize the living room",
                            Status = 3,
                            TaskCategoryId = 4
                        },
                        new
                        {
                            Id = 11,
                            Name = "Grocery shopping",
                            Status = 0,
                            TaskCategoryId = 4
                        },
                        new
                        {
                            Id = 12,
                            Name = "Plan home maintenance tasks",
                            Status = 0,
                            TaskCategoryId = 4
                        });
                });

            modelBuilder.Entity("DAL.Entities.TaskCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("TaskCategories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Work"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Finances"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Education"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Home"
                        });
                });

            modelBuilder.Entity("DAL.Entities.Task", b =>
                {
                    b.HasOne("DAL.Entities.TaskCategory", "TaskCategory")
                        .WithMany("Tasks")
                        .HasForeignKey("TaskCategoryId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("TaskCategory");
                });

            modelBuilder.Entity("DAL.Entities.TaskCategory", b =>
                {
                    b.Navigation("Tasks");
                });
#pragma warning restore 612, 618
        }
    }
}
